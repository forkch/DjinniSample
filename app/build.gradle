//apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.model.application'

def djinniGeneratedSourceDir = new File(buildDir, "djinni_generated")

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def djinniDir = properties.getProperty('djinni.dir')

task runDjinni(type: Exec) {
    executable "${djinniDir}/src/run"
    args += ["--java-out", "${djinniGeneratedSourceDir}/java/ch/fork/djinnisample"]
    args += ["--java-package", "ch.fork.djinnisample"]
    args += ["--ident-java-field", "mFooBar"]
    args += ["--cpp-out", "${djinniGeneratedSourceDir}/cpp"]
    args += ["--cpp-namespace", "Fibonacci"]
    args += ["--jni-namespace", "Fibonacci"]
    args += ["--jni-out", "${djinniGeneratedSourceDir}/jni"]
    args += ["--ident-jni-class", "NativeFooBar"]
    args += ["--ident-jni-file", "NativeFooBar"]
    args += ["--idl", "fibonacci.djinni"]
}     

def djinniSupportDir = new File(buildDir, "djinni_src/support-lib")
task copyDjinniSupportLib(type: Copy) {
    from "${djinniDir}/support-lib"
    destinationDir djinniSupportDir
    include "*.cpp" include "*.hpp"
    include "jni/*.cpp" include "jni/*.hpp"
}

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion ="23.0.1"

        defaultConfig.with {
            applicationId = "ch.fork.djinnisample"
            minSdkVersion.apiLevel      = 19
            targetSdkVersion.apiLevel   = 23
        }
    }

    compileOptions.with {
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }

    /*
     * native build settings
     */
    android.ndk {
        moduleName = "fibonacci-jni"
//        toolchain = "clang"
//        toolchainVersion = "3.5"
//        ldLibs    = ["android", "log"]
        stl       = "c++_static"
        cppFlags += "-I${file("src/main/jni")}".toString()
        cppFlags += "-I${djinniSupportDir}".toString()
        cppFlags += "-I${djinniSupportDir}/jni".toString()
        cppFlags += "-I${file("src/main/jni/support-lib")}".toString()
        cppFlags += "-I${djinniGeneratedSourceDir}/cpp".toString()
        cppFlags += "-I${file("src/main/jni/djinni_generated/jni")}".toString()
        cppFlags += "-latomic"
        cppFlags += "-DGXX_EXPERIMENTAL_CXX0X"
        cppFlags += "-frtti"
        cppFlags += "-std=c++11"
        cppFlags += "-fexceptions"
        cppFlags += "-pthread"
    }
    android.buildTypes {
        release {
            minifyEnabled = false

        }
    }
    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
//        create("arm") {
//            ndk.abiFilters += "armeabi"
//        }
//        create("arm7") {
//            ndk.abiFilters += "armeabi-v7a"
//        }
//        create("arm8") {
//            ndk.abiFilters += "arm64-v8a"
//        }
//        create("x86") {
//            ndk.abiFilters += "x86"
//        }
//        create("x86-64") {
//            ndk.abiFilters += "x86_64"
//        }
//        create("mips") {
//            ndk.abiFilters += "mips"
//        }
//        create("mips-64") {
//            ndk.abiFilters += "mips64"
//        }
//        // To include all cpu architectures, leaves abiFilters empty
        create("all")
    }

    android.sources {
        main {
            jni {
                source {
                    srcDirs 'src/main/jni'
                    srcDirs += djinniGeneratedSourceDir
                    srcDirs += djinniSupportDir
                }
            }
            java {
                source {
                    srcDirs 'src/main/java'
                    srcDirs += djinniGeneratedSourceDir
                }
            }
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:1.0.1'
}